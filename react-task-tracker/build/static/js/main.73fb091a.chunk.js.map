{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","components/Footer.jsx","components/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","className","style","backgroundColor","color","text","Header","location","useLocation","title","pathname","showAdd","onAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAYeA,EAZA,SAACC,GACd,OACE,wBACEC,QAASD,EAAMC,QACfC,UAAU,MACVC,MAAO,CAAEC,gBAAiBJ,EAAMK,OAHlC,SAKGL,EAAMM,QCWEC,EAhBA,SAACP,GACd,IAAMQ,EAAWC,cAEjB,OACE,yBAAQP,UAAU,SAAlB,UACE,6BAAKF,EAAMU,QACY,MAAtBF,EAASG,UACV,cAAC,EAAD,CACEN,MAAOL,EAAMY,QAAU,MAAQ,QAC/BN,KAAMN,EAAMY,QAAU,QAAU,MAChCX,QAASD,EAAMa,Y,QCURC,EApBF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACE,sBACEf,UAAS,eAAUa,EAAKG,SAAS,WAAW,IAC5CC,cAAe,WACbF,EAASF,EAAKK,KAHlB,UAME,+BACGL,EAAKT,KACN,cAAC,IAAD,CACEH,MAAO,CAAEE,MAAO,MAAOgB,OAAQ,WAC/BpB,QAAS,kBAAMe,EAASD,EAAKK,UAGjC,4BAAIL,EAAKO,UCCAC,EAjBD,SAACvB,GACb,OACE,mCACGA,EAAMwB,MAAMC,KAAI,SAACV,GAChB,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNC,SAAUhB,EAAMgB,SAChBC,SAAUjB,EAAMiB,UAHXF,EAAKK,UC8CPM,EAnDC,SAAC1B,GACf,MAAwB2B,mBAAS,IAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KACA,OACE,uBACE5B,UAAU,WACV6B,SAAU,SAACC,GACTA,EAAEC,iBACE3B,GAIJN,EAAMa,MAAM,CAAEP,OAAMgB,MAAKJ,aACzBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IANRI,MAAM,sBALd,UAcE,sBAAKhC,UAAU,eAAf,UACE,0CACA,uBACEiC,KAAK,OACLC,YAAY,WACZC,MAAO/B,EACPgC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAGtC,sBAAKnC,UAAU,eAAf,UACE,gDACA,uBACEiC,KAAK,OACLC,YAAY,iBACZC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGrC,sBAAKnC,UAAU,kCAAf,UACE,kDACA,uBACEiC,KAAK,WACLK,QAAStB,EACTmB,MAAOnB,EACPoB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAGjD,uBAAOL,KAAK,SAASE,MAAM,YAAYnC,UAAU,sBCvCxCwC,EAPA,WACX,OAAS,mCACJ,yDACA,cAAC,IAAD,CAAMC,GAAG,SAAT,uBCKMC,EAPD,WACV,OAAS,gCACL,+CACA,cAAC,IAAD,CAAMD,GAAG,IAAT,0BCqGOE,MApGf,WACE,MAAsClB,oBAAS,GAA/C,mBAAOmB,EAAP,KAAoBC,EAApB,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcwB,EAAd,KACAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAIdC,KACC,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAGVA,GAHU,2CAAH,qDAMVC,EAAS,uCAAG,WAAOtC,GAAP,iBAAA8B,EAAA,sEACEI,MAAM,+BAAD,OAAgClC,IADvC,cACVmC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAGTA,GAHS,2CAAH,sDAOTE,EAAO,uCAAG,WAAO5C,GAAP,iBAAAmC,EAAA,sEACII,MAAM,8BAA+B,CACrDM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUjD,KANT,cACRwC,EADQ,gBAQKA,EAAIC,OART,OAQRC,EARQ,OASdT,EAAS,GAAD,mBAAKxB,GAAL,CAAYiC,KATN,2CAAH,sDAkBPQ,EAAU,uCAAG,WAAO7C,GAAP,SAAA8B,EAAA,sEACXI,MAAM,+BAAD,OAAgClC,GAAM,CAC/CwC,OAAQ,WAFO,OAIjBZ,EAASxB,EAAM0C,QAAO,SAACnD,GAAD,OAAUA,EAAKK,KAAOA,MAJ3B,2CAAH,sDAOV+C,EAAc,uCAAG,WAAO/C,GAAP,qBAAA8B,EAAA,sEACMQ,EAAUtC,GADhB,cACfgD,EADe,OAEfC,EAFe,2BAEAD,GAFA,IAEclD,UAAWkD,EAAalD,WAFtC,SAGHoC,MAAM,+BAAD,OAAgClC,GAAM,CAC3DwC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUK,KARF,cAGfd,EAHe,gBAUFA,EAAIC,OAVF,OAUfC,EAVe,OAWrBT,EACExB,EAAMC,KAAI,SAACV,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,SAAUuC,EAAKvC,WAAaH,MAbvC,4CAAH,sDAiBpB,OACE,cAAC,IAAD,UACE,sBAAKb,UAAU,YAAf,UACE,cAAC,EAAD,CACEQ,MAAM,eACNG,MAAO,kBAAMkC,GAAgBD,IAC7BlC,QAASkC,IAEX,cAAC,IAAD,CACEwB,KAAK,IACLC,OAAK,EACLC,OAAQ,SAACxE,GAAD,OACN,qCACG8C,GAAe,cAAC,EAAD,CAASjC,MAAO8C,IAC/BnC,EAAMiD,OACL,cAAC,EAAD,CACEjD,MAAOA,EACPR,SAAUiD,EACVhD,SAAUkD,IAGZ,8BAKR,cAAC,IAAD,CAAOG,KAAK,SAASI,UAAW9B,IAChC,cAAC,EAAD,UCzFO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73fb091a.chunk.js","sourcesContent":["const Button = (props) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className=\"btn\"\r\n      style={{ backgroundColor: props.color }}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nimport {useLocation} from 'react-router-dom'  \r\nconst Header = (props) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{props.title}</h1>\r\n      {location.pathname === '/' &&\r\n      <Button\r\n        color={props.showAdd ? \"red\" : \"green\"}\r\n        text={props.showAdd ? \"Close\" : \"Add\"}\r\n        onClick={props.onAdd}\r\n      />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder?'reminder':''}`}\r\n      onDoubleClick={() => {\r\n        onToggle(task.id);\r\n      }}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nconst Tasks = (props) => {\r\n  return (\r\n    <>\r\n      {props.tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            onDelete={props.onDelete}\r\n            onToggle={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n  return (\r\n    <form\r\n      className=\"add-form\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            alert('Please add a task');\r\n            return ;\r\n        }\r\n        props.onAdd({ text, day, reminder });\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n      }}\r\n    >\r\n      <div className=\"form-control\">\r\n        <label>Task </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & time </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set reminder </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return ( <footer>\r\n         <p>    Copyright &copy; 2021 </p>\r\n         <Link to=\"/about\">About</Link> \r\n        </footer> );\r\n}\r\n \r\nexport default Footer;","import {Link} from 'react-router-dom'\r\n \r\n\r\nconst About = () => {\r\n    return ( <div>\r\n        <h4>Version 1.0.0</h4>\r\n        <Link to=\"/\">Go Back </Link>\r\n    </div> );\r\n}\r\n \r\nexport default About;","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n  //fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    // const id= Math.floor(Math.random()*10000)+1;\n    // const id = tasks.length + 1;\n\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  //delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  //toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          title=\"Task Tracker\"\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"no tasks for today :D\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}